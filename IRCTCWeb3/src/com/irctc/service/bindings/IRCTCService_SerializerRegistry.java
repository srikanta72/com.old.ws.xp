// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.irctc.service.bindings;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.*;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.rpc.*;
import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class IRCTCService_SerializerRegistry implements SerializerConstants {
    public IRCTCService_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping12 = registry.getTypeMapping(SOAP12Constants.NS_SOAP_ENCODING);
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "getTicketForPnrResponse");
            CombinedSerializer serializer = new com.irctc.web.provider.IRCTCTicket_getTicketForPnr_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.IRCTCTicket_getTicketForPnr_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "getTicketForPnr");
            CombinedSerializer serializer = new com.irctc.web.provider.IRCTCTicket_getTicketForPnr_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.IRCTCTicket_getTicketForPnr_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "PassengerInfo");
            CombinedSerializer serializer = new com.irctc.web.provider.PassengerInfo_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.PassengerInfo.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "getOffer");
            CombinedSerializer serializer = new com.irctc.web.provider.IRCTCTicket_getOffer_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.IRCTCTicket_getOffer_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "getOfferResponse");
            CombinedSerializer serializer = new com.irctc.web.provider.IRCTCTicket_getOffer_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.IRCTCTicket_getOffer_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "JourneyInfo");
            CombinedSerializer serializer = new com.irctc.web.provider.JourneyInfo_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.JourneyInfo.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "getTicketForBookingResponse");
            CombinedSerializer serializer = new com.irctc.web.provider.IRCTCTicket_getTicketForBooking_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.IRCTCTicket_getTicketForBooking_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "bookTicketResponse");
            CombinedSerializer serializer = new com.irctc.web.provider.IRCTCTicket_bookTicket_ResponseStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.IRCTCTicket_bookTicket_ResponseStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "getTicketForBooking");
            CombinedSerializer serializer = new com.irctc.web.provider.IRCTCTicket_getTicketForBooking_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.IRCTCTicket_getTicketForBooking_RequestStruct.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "Ticket");
            CombinedSerializer serializer = new com.irctc.web.provider.Ticket_SOAPSerializer(type,
                ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.Ticket.class, type, serializer);
        }
        {
            QName type = new QName("http://irctc.com/partners/ticketsinfo/types", "bookTicket");
            CombinedSerializer serializer = new com.irctc.web.provider.IRCTCTicket_bookTicket_RequestStruct_SOAPSerializer(type,
                DONT_ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
            serializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, serializer, SOAPVersion.SOAP_11);
            registerSerializer(mapping,com.irctc.web.provider.IRCTCTicket_bookTicket_RequestStruct.class, type, serializer);
        }
        return registry;
    }
    
    private static void registerSerializer(TypeMapping mapping, java.lang.Class javaType, javax.xml.namespace.QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
